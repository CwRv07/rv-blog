<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Config 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="me.rvj.blog.mapper.ArticleMapper">

    <resultMap id="articleMap" type="me.rvj.blog.vo.ArticleVo">
        <id column="id" property="id"/>
        <association property="author" column="author_id" select="findUserById"></association>
        <association property="category" column="category_id" select="findCategoryById"></association>
        <collection property="tagList" column="id" select="findTagListById"></collection>
    </resultMap>

    <!-- 文章列表 -->
    <select id="listArticle" resultMap="articleMap">
        SELECT *
        FROM rv_article
        ORDER BY create_date DESC
    </select>

    <!-- 文章列表条件搜索 -->
    <select id="listArticleByCondition" resultMap="articleMap">
        select * from rv_article
        <where>
            1 = 1
            <if test="categoryId != null">
                and category_id=#{categoryId}
            </if>
            <if test="tagId != null and tagId.length>0">
                and id in (select article_id from rv_article_tag where tag_id IN
                <foreach collection="tagId" item="id" index="index" open="(" close=")" separator=",">
                    #{id}
                </foreach>
                )
            </if>
            <if test="upperLimitTime != null">
                and create_date &lt;= #{upperLimitTime}
            </if>
            <if test="lowerLimitTime != null">
                and create_date &gt;= #{lowerLimitTime}
            </if>
            <if test='search != null and search != ""'>
                and title like concat("%",#{search,jdbcType=VARCHAR},"%")
            </if>
        </where>
        order by weight,create_date desc
    </select>


    <!-- 文章详情 -->
    <resultMap id="articleDetailMap" type="me.rvj.blog.vo.ArticleVo">
        <id column="id" property="id"/>
        <association property="content" column="body_id" select="findContentById"></association>
        <association property="author" column="author_id" select="findUserById"></association>
        <association property="category" column="category_id" select="findCategoryById"></association>
        <collection property="commentList" column="id" select="findCommentListById"></collection>
        <collection property="tagList" column="id" select="findTagListById"></collection>
    </resultMap>
    <resultMap id="articleDetailCommentMap" type="me.rvj.blog.vo.CommentVo">
        <association property="author" column="author_id" select="findUserById"></association>
        <association property="toUser" column="to_uid" select="findUserById"></association>
    </resultMap>

    <select id="articleDetail" parameterType="long" resultMap="articleDetailMap">
        SELECT *
        FROM rv_article
        WHERE id = #{id};
    </select>

    <!--  多级评论递归遍历（旧而傻的方案XD  -->
    <!--    <select id="findCommentListById" parameterType="long" resultMap="ArticleDetailSubCommentMap">-->
    <!--        SELECT *-->
    <!--        FROM rv_comment-->
    <!--        WHERE article_id = #{id} AND level = 1;-->
    <!--    </select>-->
    <!--    <select id="findSubCommentListById" parameterType="long" resultMap="ArticleDetailSubCommentMap">-->
    <!--        SELECT *-->
    <!--        FROM rv_comment-->
    <!--        WHERE parent_id = #{id} AND level != 1;-->
    <!--    </select>-->
    <!--  多级评论新方案（根据逆范式新增ancetor_id字段  -->
    <select id="findCommentListById" parameterType="long" resultMap="articleDetailCommentMap">
        SELECT *
        FROM rv_comment
        WHERE article_id = #{id}
        ORDER BY create_date DESC, 'like' DESC
    </select>

    <!--  findSelect  -->
    <select id="findUserById" parameterType="long" resultType="me.rvj.blog.vo.UserVo">
        SELECT id, nickname
        FROM rv_sys_user
        WHERE id = #{id};
    </select>
    <select id="findCategoryById" parameterType="long" resultType="me.rvj.blog.entity.Category">
        SELECT *
        FROM rv_category
        WHERE id = #{id};
    </select>
    <select id="findTagListById" parameterType="long" resultType="me.rvj.blog.entity.Tag">
        SELECT t.*
        FROM rv_tag t
        WHERE t.id IN (SELECT tag_id
                       FROM rv_article_tag
                       WHERE article_id = #{id})
    </select>
    <select id="findContentById" parameterType="long" resultType="java.lang.String">
        SELECT content
        FROM rv_article_body
        WHERE id = #{id};
    </select>
</mapper>